#! /bin/sh

cmd_name="${0##*/}"
mtd_file="/proc/mtd"

[ -f /dni-gconfig ] && . /dni-gconfig

### list of valid partitions' name, please expand this list when new partition was created.
parts='qcadata uboot uboot.env art art.bak kernel rootfs ntgrdata firmware crashinfo language dnidata cert pot pot.bak traffic traffic.bak config'

usage()
{
	printf "%s\n" \
		"Usage:	${cmd_name} [<partition>]" \
		"" \
		"	print full path of the partition supplied by argument <partition>." \
		"	for example, below command will print \"/dev/mtd1\" on R7500v2." \
		"		${cmd_name} uboot" \
		"	valid <partition> should be one of below strings: $(echo $parts | sed -r 's/([^ ]+)/\n		"\1"/g')" \
		"" \
		"	if no <partition> supply, will print path, and partition name" \
		"	of all valid partitions line by line as below format:" \
		"		Path		Name" \
		"		/dev/mtd0	qcadata" \
		"		/dev/mtd1	uboot" \
		"		/dev/mtd2	uboot.bak" \
		"		..." \
		"		/dev/mtd20	pot"
}

##### contents of file '/proc/mtd' displays as below format:
#	dev:	size	erasesize	name
#	mtd0:	00c80000 00020000	"qcadata"
#	mtd1:	00500000 00020000	"uboot"
#	mtd2:	00080000 00020000	"uboot.env"
#	...
#	mtd20:	0005d000 0001f000	"pot"
__get_part_path_by_name()
{
	if [ -z "$1" ]; then
		printf ":( missing partition name in 1st argument!\n" >&2
		exit 1
	fi

	local path="$(sed -nr 's%^(mtd[0-9]+):.*"'$1'"$%/dev/\1%p' ${mtd_file})"
	if [ -z "$path" ]; then
		printf ":( can't find partition $1 in file ${mtd_file}!\n" >&2
		exit 1
	else
		printf "%s" $path
	fi
}

# Re-map some partition name per product
get_part_path_by_name()
{
	case "x$DGC_PRODUCT_NAME" in
		"xR7500v2")
			local mp
			case "$1" in
				"traffic") mp="traffic_meter"
					;;
				"traffic.bak") mp="traffic_meter.bak"
					;;
				*) mp=$1
					;;
			esac
			__get_part_path_by_name $mp
			;;
		"xD7800")
			local mp
			case "$1" in
				"traffic") mp="traffic_meter"
					;;
				"traffic.bak") mp="traffic_meter.bak"
					;;
				"ntgrdata") mp="netgear"
					;;
				"crashinfo") mp="crashdump"
					;;
				"art") mp="ART"
					;;
				"art.bak") mp="ART.bak"
					;;
				"uboot") mp="APPSBL"
					;;
				"uboot.env") mp="APPSBLENV"
					;;
				*) mp=$1
					;;
			esac
			__get_part_path_by_name $mp
			;;
		*)
			__get_part_path_by_name $1
			;;
	esac

}

get_part_path()
{
	if [ -z "$1" ]; then	# print path and partition name of all partitions
		printf "Path		Name\n"
		for part in ${parts}
		do
			printf "%s\t%s\n" $(get_part_path_by_name ${part}) ${part}
		done
	else	# print the full path of the partition named by $1
		get_part_path_by_name $1
	fi
}

if [ $# -eq 0 ] || [ $# -eq 1 -a -n "$(echo $parts | grep -r "\b$1\b")" ]; then
	get_part_path $@
else
	usage && exit 1
fi
